type Address {
  line1: String
  line2: String
  city: String
  state: String
  pincode: String
}

type User {
  _id: ID!
  firstName: String!
  lastName: String!
  email: String!
  password: String
  firmName: String
  adress: Address
  phone: String
  termsAndConditions: [String!]
}

type AuthToken {
  authToken: String!
}

input LoginInput {
  email: String!
  password: String!
}

input CheckEmailInput {
  email: String!
}

input GetUserInput {
  _id: ID!
}

input AddressInput {
  line1: String!
  line2: String!
  city: String!
  state: String!
  pincode: String!
}

input UpdateUserInput {
  firstName: String
  lastName: String
  firmName: String
  address: AddressInput
  phone: String
  termsAndConditions: [String!]
}

input PasswordChangeInput {
  old: String!
  new: String!
}

input CreateUserInput {
  firstName: String!
  email: String!
  password: String!
  lastName: String
  firmName: String
  adress: AddressInput
  phone: String
  termsAndConditions: [String!]
}

# Response Types
type CreateUserResponse {
  token: String!
  user: User!
}

type Query {
  login(loginInput: LoginInput!): AuthToken
  profile(_id: ID!): User
  me: User
  checkEmail(checkEmailInput: CheckEmailInput!): Boolean
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): CreateUserResponse
  editUser(_id: ID!, editUserInput: UpdateUserInput!): User
  changePassword(changePasswordInput: PasswordChangeInput): Boolean
}
